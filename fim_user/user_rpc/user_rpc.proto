syntax = "proto3";
package user_rpc;
option go_package = "./user_rpc";

/*
message UserInfoRequest {
  uint32 user_id = 1;
}
message UserInfoResponse {
  uint32 user_id = 1;
  string username = 2;
}
*/
message UserCreateRequest {
  string nickname = 1;
  string password = 2;
  int32  role = 3;
  string avatar = 4;
  string openid = 5;
  string register_source = 6;
}
message UserCreateResponse{
  int32 user_id = 1;
}
message UserInfoRequest{
  uint32 user_id = 1;
}
message UserInfoResponse{
  bytes data  = 1; //用户和用户配置的json数据
}

message UserListInfoRequest{
  repeated uint32 user_id_list = 1;//用户id列表
}
message UserInfo{
  string nick_name = 1;
  string avatar = 2;

}
message UserListInfoResponse{
  map<uint32,UserInfo> user_info = 1;//用户信息
}
service Users{
  rpc UserInfo(UserInfoRequest)returns(UserInfoResponse);//用户信息
  rpc UserCreate(UserCreateRequest)returns(UserCreateResponse);//用户创建
  rpc UserListInfo(UserListInfoRequest)returns(UserListInfoResponse);//用户列表信息
}

// goctl rpc protoc user_rpc.proto --go_out=./types --go-grpc_out=./types --zrpc_out=.