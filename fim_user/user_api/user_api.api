type UserInfoRequest {
	UserID uint `header:"User-ID"`
	Role   int8 `header:"User-Role"`
}

type VerificationQuestion {
	Problem1 *string `json:"problem1"`
	Problem2 *string `json:"problem2"`
	Problem3 *string `json:"problem3"`
	Answer1  *string `json:"answer1"`
	Answer2  *string `json:"answer2"`
	Answer3  *string `json:"answer3"`
}

type UserInfoResponse {
	UserID               uint                  `json:"user_id"`
	Nickname             string                `json:"nickname"`
	Profile              string                `json:"profile"` //���˼���
	Avatar               string                `json:"avatar"` //ͷ��
	RecallMessage        *string               `json:"recall_message"`
	FriendOnline         bool                  `json:"friend_online"`
	Sound                bool                  `json:"sound"`
	SecureLink           bool                  `json:"secure_link"`
	SavePwd              bool                  `json:"save_pwd"`
	SearchUser           int8                  `json:"search_user"`
	Verification         int8                  `json:"verification"`
	VerificationQuestion *VerificationQuestion `json:"verification_question"`
	Online               bool                  `json:"online"`
}

service user {
	@handler user_info
	get /api/user/user_info (UserInfoRequest) returns (UserInfoResponse) //��¼�ӿ�
}

// goctl api go -api user_api.api -dir .
