syntax = "v1"

type GroupCreateRequest {
	UserID     uint   `header:"User-ID"`
	Mode       int8   `json:"mode,optional"`
	Title      string `json:"title,optional"` //群聊名字
	IsSearch   bool   `json:"is_search,optional"`
	Size       int    `json:"size,optional"`
	UserIDList []uint `json:"user_id_list,optional"`
}

type GroupCreateResponse {}

type GroupInfoRequest {
	UserID uint `header:"User-ID"`
	ID     uint `path:"id"` //群id
}

type UserInfo {
	UserID   uint   `json:"user_id"`
	Avatar   string `json:"avatar"`
	Nickname string `json:"nickname"`
}

type GroupInfoResponse {
	GroupID           uint       `json:"group_id"` //群id
	Title             string     `json:"title"` //群名称
	Abstract          string     `json:"abstract"` //群简介
	Avatar            string     `json:"avatar"` //群头像
	Creator           UserInfo   `json:"creator"` //群主
	MemberCount       int        `json:"member_count"` //群聊用户总数
	MemberOnlineCount int        `json:"member_online_count"` //在线用户数量
	AdminList         []UserInfo `json:"admin_list"` //管理员列表
	Role              int8       `json:"role"` //角色
	IsProhibition     bool       `json:"is_prohibition"` //是否开启全员禁言
	ProhibitionTime   *int       `json:"prohibition_time"` //自己的禁言时间，单位 min
}

type VerificationQuestion {
	Problem1 *string `json:"problem1,optional" conf:"problem1"`
	Problem2 *string `json:"problem2,optional" conf:"problem2"`
	Problem3 *string `json:"problem3,optional" conf:"problem3"`
	Answer1  *string `json:"answer1,optional" conf:"answer1"`
	Answer2  *string `json:"answer2,optional" conf:"answer2"`
	Answer3  *string `json:"answer3,optional" conf:"answer3"`
}

type GroupUpdateRequest {
	UserID               uint                  `header:"User-ID"`
	ID                   uint                  `json:"id"` //群id
	IsSearch             *bool                 `json:"is_search,optional" conf:"is_search"`
	Avatar               *string               `json:"avatar,optional" conf:"avatar"`
	Abstract             *string               `json:"abstract,optional" conf:"abstract"`
	Title                *string               `json:"title,optional" conf:"title"`
	Verification         *int8                 `json:"verification,optional" conf:"verification"`
	IsInvite             *bool                 `json:"is_invite,optional" conf:"is_invite"`
	IsTemporarySession   *bool                 `json:"is_temporary_session,optional" conf:"is_temporary_session"`
	IsProhibition        *bool                 `json:"is_prohibition,optional" conf:"is_prohibition"`
	VerificationQuestion *VerificationQuestion `json:"verification_question,optional" conf:"verification_question"`
}

type GroupUpdateResponse {}

type GroupDeleteRequest {
	UserID uint `header:"User-ID"`
	ID     uint `path:"id"` //群id
}

type GroupDeleteResponse {}

type GroupMemberRequest {
	UserID uint   `header:"User-ID"`
	ID     uint   `form:"id"`
	Page   int    `form:"page,optional"`
	Limit  int    `form:"limit,optional"`
	Sort   string `form:"sort,optional"`
}

type GroupMemberInfo {
	UserID         uint   `json:"user_id"`
	UserNickname   string `json:"user_nickname"`
	Avatar         string `json:"avatar"`
	IsOnline       bool   `json:"is_online"`
	Role           int8   `json:"role"`
	MemberNickname string `json:"member_nickname"`
	CreatedAt      string `json:"created_at"`
	NewMsgDate     string `json:"new_msg_date"`
}

type GroupMemberResponse {
	List  []GroupMemberInfo `json:"list"`
	Count int               `json:"count"`
}

type GroupRemoveMemberRequest {
	UserID   uint `header:"User-ID"` //自己的id
	ID       uint `form:"id"` //群id
	MemberID uint `form:"member_id"` //被操作的用户id
}

type GroupRemoveMemberResponse {}

type GroupAddMemberRequest {
	UserID       uint   `header:"User-ID"` //自己的id
	ID           uint   `json:"id"` //群id
	MemberIDList []uint `json:"member_id_list"` //被操作的用户id
}

type GroupAddMemberResponse {}

type GroupUpdateMemberNicknameRequest {
	UserID   uint   `header:"User-ID"` //自己的id
	ID       uint   `json:"id"` //群id
	MemberID uint   `json:"member_id"`
	Nickname string `json:"nickname"`
}

type GroupUpdateMemberNicknameResponse {}

type GroupUpdateRoleRequest {
	UserID   uint `header:"User-ID"` //自己的id
	ID       uint `json:"id"` //群id
	MemberID uint `json:"member_id"`
	role     int8 `json:"role"`
}

type GroupUpdateRoleResponse {}

type GroupFriendsListRequest {
	UserID uint `header:"User-ID"` //自己的id
	ID     uint `form:"id"` //群id
}

type GroupFriendsResponse {
	UserID    uint   `json:"user_id"`
	Avatar    string `json:"avatar"`
	Nickname  string `json:"nickname"`
	IsInGroup bool   `json:"is_in_group"` //是否在群里面
}

type GroupFriendsListResponse {
	List  []GroupFriendsResponse `json:"list"`
	Count int                    `json:"count"`
}

type GroupSearchRequest {
	UserID uint   `header:"User-ID"` //自己的id
	Key    string `form:"key,optional"`
	Page   int    `form:"page,optional"`
	Limit  int    `form:"limit,optional"`
}

type GroupSearchResponse {
	GroupID         uint   `json:"group_id"`
	Title           string `json:"title"`
	Abstract        string `json:"abstract"`
	Avatar          string `json:"avatar"`
	IsInGroup       bool   `json:"is_in_group"` //我是否在群里
	UserCount       int    `json:"user_count"` //群用户总数
	UserOnlineCount int    `json:"user_online_count"` //群用户在线总数
}

type GroupSearchListResponse {
	List  []GroupSearchResponse `json:"list"`
	Count int                   `json:"count"` //群的个数，因为可能群昵称搜索之类的
}

type GroupValidRequest {
	UserID  uint `header:"User-ID"`
	GroupID uint `form:"group_id"`
}

type GroupValidResponse {
	Verification         int8                 `json:"verification"` //好友验证,0 不允许任何人 1允许任何人 2 需要验证消息 3 需要回答问题 4 需要正确回答设置的问题
	VerificationQuestion VerificationQuestion `json:"verification_question"` //这是问题和答案，记得答案就别返回了
}

type AddGroupRequest {
	UserID               uint                  `header:"User-ID"`
	GroupID              uint                  `json:"group_id"`
	AdditionalMessages   string                `json:"additional_messages,optional"` //验证消息
	VerificationQuestion *VerificationQuestion `json:"verification_question,optional"` //问题和答案
}

type AddGroupResponse {}

type GroupValidListRequest {
	UserID uint `header:"User-ID"`
	Page   int  `form:"page,optional"`
	Limit  int  `form:"limit,optional"`
}

type GroupValidInfoResponse {
	ID                   uint                  `json:"id"`
	GroupID              uint                  `json:"group_id"`
	UserID               uint                  `json:"user_id"`
	UserNickname         string                `json:"user_nickname"`
	UserAvatar           string                `json:"userAvatar"`
	status               int8                  `json:"status"`
	AdditionalMessages   string                `json:"additional_messages"`
	VerificationQuestion *VerificationQuestion `json:"verification_question"`
	Title                string                `json:"title"`
	CreatedAt            string                `json:"created_at"`
	Type                 int8                  `json:"type"` //1 加群 2退群
}

type GroupValidListResponse {
	List  []GroupValidInfoResponse `json:"list"`
	Count int                      `json:"count"`
}

type GroupUpdateValidStatusRequest {
	UserID  uint `header:"User-ID"`
	ValidID uint `json:"valid_id"`
	Status  int8 `json:"status"`
}

type GroupUpdateValidStatusResponse {}

type GroupUpdateUserProhibitionRequest {
	UserID          uint `header:"User-ID"`
	GroupID         uint `json:"group_id"`
	MemberID        uint `json:"member_id"`
	ProhibitionTime *int `json:"prohibition_time,optional"`
}

type GroupUpdateUserProhibitionResponse {}

type GroupHistoryRequest {
	UserID uint `header:"User-ID"`
	ID     uint `path:"id"`
	Page   int  `form:"page,optional"`
	Limit  int  `form:"limit,optional"`
}

type GroupHistoryListResponse {}

type GroupHistoryDeleteRequest {
	UserID    uint   `header:"User-ID"`
	ID        uint   `path:"id"`
	Page      int    `form:"page,optional"`
	Limit     int    `form:"limit,optional"`
	MsgIDList []uint `json:"msg_id_list"`
}

type GroupHistoryDeleteResponse {}

type GroupSessionRequest {
	UserID uint `header:"User-ID"`
	Page   int  `form:"page,optional"`
	Limit  int  `form:"limit,optional"`
}

type GroupSessionResponse {
	GroupID       uint   `json:"group_id"`
	Title         string `json:"title"`
	Avatar        string `json:"avatar"`
	NewMsgDate    string `json:"new_msg_date"` //最新的消息时间
	NewMsgPreview string `json:"new_msg_preview"` //最新的消息内容
	IsTop         bool   `json:"is_top"` //是否置顶
}

type GroupSessionListResponse {
	List  []GroupSessionResponse `json:"list"`
	Count int                    `json:"count"`
}

type GroupTopRequest {
	UserID  uint `header:"User-ID"`
	GroupID uint `json:"group_id"`
	IsTop   bool `json:"is_top"` // true表示置顶 false表示不置顶
}

type GroupTopResponse {}

type GroupMineRequest {
	UserID uint `header:"User-ID"`
	Mode   int8 `json:"mode,optional"` //1 表示我创建的 2 表示我加入的
	Page   int  `form:"page,optional"`
	Limit  int  `form:"limit,optional"`
}

type GroupMineResponse {
	GroupID          uint   `json:"group_id"`
	GroupTitle       string `json:"group_title"`
	GroupAvatar      string `json:"group_avatar"`
	GroupMemberCount int    `json:"group_member_count"`
	Role             int8   `json:"role"` //角色
	Mode             int8   `json:"mode"` //1 表示我创建的 0(不传)或者其他表示我加入的
}

type GroupMineListResponse {
	List  []GroupMineResponse `json:"list"`
	Count int                 `json:"count"`
}

service group {
	@handler group_create
	post /api/group/group_create (GroupCreateRequest) returns (GroupCreateResponse)

	@handler group_info
	get /api/group/group_info/:id (GroupInfoRequest) returns (GroupInfoResponse)

	@handler group_update
	put /api/group/group_update (GroupUpdateRequest) returns (GroupUpdateResponse)

	@handler group_delete
	delete /api/group/group_delete/:id (GroupDeleteRequest) returns (GroupDeleteResponse)

	@handler group_member
	get /api/group/group_member (GroupMemberRequest) returns (GroupMemberResponse)

	@handler group_add_member
	post /api/group/group_add_member (GroupAddMemberRequest) returns (GroupAddMemberResponse)

	@handler group_delete_member
	delete /api/group/group_delete_member (GroupRemoveMemberRequest) returns (GroupRemoveMemberResponse)

	@handler group_update_nickname
	put /api/group/group_update_nickname (GroupUpdateMemberNicknameRequest) returns (GroupUpdateMemberNicknameResponse)

	@handler group_update_role
	put /api/group/group_update_role (GroupUpdateRoleRequest) returns (GroupUpdateRoleResponse)

	@handler group_my_friends
	get /api/group/group_my_friends (GroupFriendsListRequest) returns (GroupFriendsListResponse) //群里哪些是我的好友

	@handler group_search
	get /api/group/search (GroupSearchRequest) returns (GroupSearchListResponse) //群搜索

	@handler group_valid
	get /api/group/group_valid (GroupValidRequest) returns (GroupValidResponse) //群展示要加群时的验证消息

	@handler group_add
	post /api/group/group_add (AddGroupRequest) returns (AddGroupResponse) //加群

	@handler group_valid_list
	get /api/group/group_valid_list (GroupValidListRequest) returns (GroupValidListResponse) //群验证列表

	@handler group_valid_status
	put /api/group/group_valid_status (GroupUpdateValidStatusRequest) returns (GroupUpdateValidStatusResponse) //群验证状态变更

	@handler group_user_prohibition
	put /api/group/group_user_prohibition (GroupUpdateUserProhibitionRequest) returns (GroupUpdateUserProhibitionResponse) //更改用户禁言设置

	@handler group_history
	get /api/group/group_history/:id (GroupHistoryRequest) returns (GroupHistoryListResponse) //群聊消息记录

	@handler group_history_delete
	delete /api/group/group_history_delete/:id (GroupHistoryDeleteRequest) returns (GroupHistoryDeleteResponse) //删除群聊消息记录

	@handler group_session
	get /api/group/group_session (GroupSessionRequest) returns (GroupSessionListResponse) //群会话列表

	@handler group_top
	put /api/group/top (GroupTopRequest) returns (GroupTopResponse) //群置顶

	@handler group_mine
	get /api/group/group_mine (GroupMineRequest) returns (GroupMineListResponse) //我创建/加入的群
}

//goctl api go -api group_api.api -dir .
