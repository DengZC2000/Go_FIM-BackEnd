syntax = "proto3";

package chat_rpc;
option go_package = "./chat_rpc";

message UserChatRequest{
uint32 send_user_id = 1;
uint32 rev_user_id = 2;
bytes msg = 3;//msg的json格式 msgPreview通过msg和system_msg算出来
  bytes system_msg = 4;//系统消息
}
message UserChatResponse{

}

message UserListChatCountRequest{
repeated  uint32 user_id_list = 1;
}
message ChatCountMessage {
  int32 send_msg_count = 1;
  int32 rev_msg_count = 2;
}
message UserListChatCountResponse{
map<uint32,ChatCountMessage> result = 1;
}
service Chat{

  rpc UserChatCreate(UserChatRequest)returns(UserChatResponse);

  rpc UserListChatCount(UserListChatCountRequest)returns(UserListChatCountResponse);

}
//goctl rpc protoc chat_rpc.proto --go_out=./types --go-grpc_out=./types --zrpc_out=.